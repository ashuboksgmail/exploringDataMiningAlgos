# -*- coding: utf-8 -*-
"""WeightedNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CDjVIwhy4UcivpznPW8FUsR-h5zKaFNd
"""

#mounting google driv
from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/DMV

import numpy as np

def euclidean_distance(x1, x2):
    return np.sqrt(np.sum((x1 - x2)**2))

def weighted_nn_classifier(X_train, y_train, X_test):
    y_pred = []
    for i in range(len(X_test)):
        distances = [euclidean_distance(X_train[j], X_test[i]) for j in range(len(X_train))]
        weights = np.zeros(len(X_train))
        for j in range(len(X_train)):
            weights[j] = 1.0 / (euclidean_distance(X_train[j], X_test[i]) + 1e-10)  # add a small number to avoid division by zero
        sorted_indices = np.argsort(distances)
        sorted_weights = np.array([weights[k] for k in sorted_indices])
        sorted_labels = np.array([y_train[k] for k in sorted_indices])
        y_pred.append(int(round(np.dot(sorted_weights, sorted_labels) / np.sum(sorted_weights))))
    return y_pred


# Load training data
train_data = np.loadtxt("atriskstudentstrain.csv", delimiter=",", skiprows=1)
X_train = train_data[:, :-1]
y_train = train_data[:, -1]

# Load test data
test_data = np.loadtxt("atriskstudentstest.csv", delimiter=",", skiprows=1)
X_test = test_data[:, :-1]
y_test = test_data[:, -1]

# Apply weighted nearest neighbor classifier
y_pred = weighted_nn_classifier(X_train, y_train, X_test)

# Convert real-valued predictions to binary labels
y_pred = np.round(y_pred).astype(int)

# Compute accuracy
accuracy = np.mean(y_pred == y_test)
print(f"Accuracy: {accuracy:.3f}")