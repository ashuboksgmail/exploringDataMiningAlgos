# -*- coding: utf-8 -*-
"""NN2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hVPQ13DekW4R9folOjKBPIZ3i08kudfh
"""

#mounting google driv
from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
#change directory 
# %cd /content/drive/MyDrive/DMV

import numpy as np
from sklearn.neural_network import MLPClassifier

# Load training data
train_data = np.loadtxt("atriskstudentstrain.csv", delimiter=",", skiprows=1)
X_train = train_data[:, :-1]
y_train = train_data[:, -1]

# Load test data
test_data = np.loadtxt("atriskstudentstest.csv", delimiter=",", skiprows=1)
X_test = test_data[:, :-1]
y_test = test_data[:, -1]

# Define a list of hidden layer sizes to try
hidden_layer_sizes = [(n,) for n in range(1, 11)]

# Train and test a neural network for each hidden layer size
for i, size in enumerate(hidden_layer_sizes):
    # Create a neural network with the current hidden layer size
    clf = MLPClassifier(hidden_layer_sizes=size, activation='relu', max_iter=1000)

    # Train the neural network on the training data
    clf.fit(X_train, y_train)

    # Use the neural network to predict the test data
    y_pred = clf.predict(X_test)

    # Compute the mean squared error between the predicted and actual results
    mse = np.mean((y_test - y_pred)**2)

    # Print the mean squared error for this neural network
    print(f"Neural network {i+1} with hidden layer size {size}: Mean squared error: {mse:.3f}")